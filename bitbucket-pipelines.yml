options:
  docker: true

image: node:12

pipelines:
  default:
    - step:
        caches:
          - node
          - docker
        name: build and publish docker image.
        services:
          - docker # enable Docker for your repository

        script: # Modify the commands below to build your repository.
          # set DOCKER_HUB_USERNAME and DOCKER_HUB_PASSWORD as environment variables
          # Docker variables
          - export IMAGE_NAME="${DOCKER_HUB_USERNAME}/${BITBUCKET_REPO_SLUG}:latest"
          # build the Node app
          # - npm install
          # build the Docker image (this will use the Dockerfile in the root of the repo)
          - docker build -t $IMAGE_NAME .
          # authenticate with the Docker Hub registry
          - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
          # push the new Docker image to the Docker registry
          - docker push $IMAGE_NAME
    - step:
        name: deploy-to-ecs
        image: atlassian/pipelines-awscli:latest
        deployment: production
        script:
          # AWS authentication variables
          # set AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY as environment variables
          - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-"us-east-1"} #default is us-east-1
          # Dockerhub Authentication variables
          # set DOCKER_HUB_USERNAME and DOCKER_HUB_PASSWORD as environment variables
          # Docker variables
          - export IMAGE_NAME="${DOCKER_HUB_USERNAME}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BUILD_NUMBER}"
          # ECS variables
          - export ECS_CLUSTER_NAME="${BITBUCKET_REPO_OWNER}"
          - export ECS_SERVICE_NAME="${BITBUCKET_REPO_SLUG}"
          - export ECS_TASK_NAME="${BITBUCKET_REPO_SLUG}"
          # Create ECS cluster, task, service
          - aws ecs list-clusters | grep "${ECS_CLUSTER_NAME}" || aws ecs create-cluster --cluster-name "${ECS_CLUSTER_NAME}"
          # Create ECS Service
          - aws ecs list-services --cluster "${ECS_CLUSTER_NAME}"  | grep "${ECS_SERVICE_NAME}" || aws ecs create-service --service-name "${ECS_SERVICE_NAME}" --cluster "${ECS_CLUSTER_NAME}" --task-definition "${ECS_TASK_NAME}" --desired-count 1
          - aws ecs update-service --cluster "${ECS_CLUSTER_NAME}" --service "${ECS_SERVICE_NAME}" --task-definition "${ECS_TASK_NAME}"

definitions:
  services:
    docker:
      memory: 3072